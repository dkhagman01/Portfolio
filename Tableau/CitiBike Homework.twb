<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook source-build='2019.2.3 (20192.19.0818.2120)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201608-citibike-tripdata' inline='true' name='federated.0pac56g12cis1a18yge3n121zsq4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201608-citibike-tripdata' name='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l'>
            <connection class='textscan' directory='/Users/derekhagman/Desktop/citibike data' filename='201608-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='201608-citibike-tripdata.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='integer' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='integer' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='integer' name='Trip Duration' />
            <column datatype='datetime' name='Start Time' />
            <column datatype='datetime' name='Stop Time' />
            <column datatype='integer' name='Bike ID' />
            <column datatype='string' name='User Type' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201608-citibike-tripdata.csv' table='[201608-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201609-citibike-tripdata.csv' table='[201609-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201610-citibike-tripdata.csv' table='[201610-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201611-citibike-tripdata.csv' table='[201611-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201612-citibike-tripdata.csv' table='[201612-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201701-citibike-tripdata.csv' table='[201701-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201702-citibike-tripdata.csv' table='[201702-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201703-citibike-tripdata.csv' table='[201703-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='Trip Duration' ordinal='0' />
              <column datatype='datetime' name='Start Time' ordinal='1' />
              <column datatype='datetime' name='Stop Time' ordinal='2' />
              <column datatype='integer' name='Start Station ID' ordinal='3' />
              <column datatype='string' name='Start Station Name' ordinal='4' />
              <column datatype='real' name='Start Station Latitude' ordinal='5' />
              <column datatype='real' name='Start Station Longitude' ordinal='6' />
              <column datatype='integer' name='End Station ID' ordinal='7' />
              <column datatype='string' name='End Station Name' ordinal='8' />
              <column datatype='real' name='End Station Latitude' ordinal='9' />
              <column datatype='real' name='End Station Longitude' ordinal='10' />
              <column datatype='integer' name='Bike ID' ordinal='11' />
              <column datatype='string' name='User Type' ordinal='12' />
              <column datatype='integer' name='Birth Year' ordinal='13' />
              <column datatype='integer' name='Gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201704-citibike-tripdata.csv' table='[201704-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201705-citibike-tripdata.csv' table='[201705-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201706-citibike-tripdata.csv' table='[201706-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201707-citibike-tripdata.csv' table='[201707-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201708-citibike-tripdata.csv' table='[201708-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201709-citibike-tripdata.csv' table='[201709-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201710-citibike-tripdata.csv' table='[201710-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201711-citibike-tripdata.csv' table='[201711-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201712-citibike-tripdata.csv' table='[201712-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201801-citibike-tripdata.csv' table='[201801-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201802-citibike-tripdata.csv' table='[201802-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201803-citibike-tripdata.csv' table='[201803-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201804-citibike-tripdata.csv' table='[201804-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201805-citibike-tripdata.csv' table='[201805-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201806-citibike-tripdata.csv' table='[201806-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201807-citibike-tripdata.csv' table='[201807-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201808-citibike-tripdata.csv' table='[201808-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201809-citibike-tripdata.csv' table='[201809-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201810-citibike-tripdata.csv' table='[201810-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201811-citibike-tripdata.csv' table='[201811-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201812-citibike-tripdata.csv' table='[201812-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201901-citibike-tripdata.csv' table='[201901-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201902-citibike-tripdata.csv' table='[201902-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201903-citibike-tripdata.csv' table='[201903-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201904-citibike-tripdata.csv' table='[201904-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201905-citibike-tripdata.csv' table='[201905-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201906-citibike-tripdata.csv' table='[201906-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.0xyugcq0z91p6j1abqx4k0tiiv2l' name='201907-citibike-tripdata.csv' table='[201907-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>7</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trip Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Trip Duration]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Trip Duration</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Time]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Start Time</remote-alias>
            <ordinal>16</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stop Time</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Stop Time]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Stop Time</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bike ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bike ID]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Bike ID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>User Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[User Type]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>User Type</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[201608-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AGE' datatype='integer' name='[Calculation_120823168165191680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2019 - [birth year]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='quantitative' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative'>
        <aliases>
          <alias key='1' value='Female' />
          <alias key='2' value='Male' />
        </aliases>
      </column>
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
      <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station latitude:qk]' />
          <groupfilter function='level-members' level='[none:start station longitude:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.488263' measure-ordering='alphabetic' measure-percentage='0.511737' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:starttime:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2017</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2019</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2018</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:gender:ok]' type='palette'>
            <map to='#b07aa1'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:end station name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;5 Corners Library&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey &amp; 3rd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fairmount Ave&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SSP - Basement&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;NYCBS Depot - GOW Annex&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montgomery St&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pathmark Depot&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Union St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 15 St &amp; Irving Pl&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Monmouth and 6th&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brunswick St&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington Street (Don&apos;t Use)&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;North St&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:start station name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;2 Ave &amp; E 105 St&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pershing Square North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8 Ave &amp; W 31 St&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SSP Tech Workshop&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Apache&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;W 21 St &amp; 6 Ave&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;JSQ Don&apos;t Use&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;W 41 St &amp; 8 Ave&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Broadway &amp; E 14 St&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gowanus Tech Station&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 20 St &amp; 11 Ave&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;W 45 St &amp; 6 Ave (1)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Broadway &amp; E 22 St&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LPI Facility&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;58th St Depot&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;West St &amp; Chambers St&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;E 17 St &amp; Broadway&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Expansion Tech Station&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;8 Ave &amp; W 33 St&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;E 37 St &amp; Lexington Ave&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[birth year]' filter-group='2' included-values='in-range'>
        <min>1910</min>
        <max>2003</max>
      </filter>
      <filter class='quantitative' column='[gender]' filter-group='2' included-values='in-range'>
        <min>1</min>
        <max>2</max>
      </filter>
      <filter class='quantitative' column='[start station latitude]' filter-group='2' included-values='in-range'>
        <max>42.0</max>
      </filter>
      <filter class='quantitative' column='[tripduration]' filter-group='2' included-values='in-range'>
        <min>61</min>
        <max>15000</max>
      </filter>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='10 Least Popular Starting Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 Hudson Yards&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave  &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 105 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 Ave &amp; 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 95 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;32 St &amp; 30 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;36 Ave &amp; 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;48 Ave &amp; 30 Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; Market St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;58th St Depot&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 Ave &amp; Park Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;78 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8D OPS 01&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adventures NYC&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Albany Ave &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Apache&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue C &amp; E 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bike in Movie Night | Prospect Park Bandshell&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bike The Branches - Central Branch&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bressler&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 24 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 39 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 55 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; McKibbin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; Stagg St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Johnson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cedar St &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; 51 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; Borden Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Ave &amp; Starr Street&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cherry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St (Old)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Convent Ave &amp; W 129 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cooper Square &amp; E 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Court St &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crown St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Morgan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Av &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Ave &amp; Marcy Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dock 72 Way &amp; Market St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; 4 Av&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 14 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 37 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 40 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 43 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 43 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 5 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 56 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 61 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 71 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 77 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 87 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Elizabeth St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Expansion Tech Station&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Expansion Warehouse 333 Johnson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; Empire Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frost St &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frost St &amp; Meeker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Irving Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;GOW Tech Shop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gowanus Tech Station&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Great Jones St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; North Moore St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; Warren St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Handlebar @ Gowanus&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hanson Pl &amp; St Felix St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hart St &amp; Wyckoff Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Middagh St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St (OLD)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St [old]&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hs Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; East River&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Industry City, Building 1 Basement&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Irving Ave &amp; DeKalb Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Irving Ave &amp; Jefferson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jay St &amp; York St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;John St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;JSQ Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kingston Ave &amp; Herkimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kiosk in a box Motivate&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Knickerbocker Ave &amp; George St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Knickerbocker Ave &amp; Thames St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Bayard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Boerum St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Decatur St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 26 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 36 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;LPI Facility&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McKibbin St &amp; Bogart St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montague St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave OLD&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; Marcy Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 11 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norman Ave &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norman Ave &amp; Leonard St - 2&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - RIS&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;old - E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Old Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Penn Station Valet&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Penn Station Valet - Valet Scan&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square North&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square South&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Picnic Point&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pierrepont St &amp; Monroe Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Powers St &amp; Olive St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;President St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Park - 5 Year Anniversary Celebration&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prototype Lab Motivate Headquarters&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Reed St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 89 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rogers Ave &amp; Sterling St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 5 Pl &amp; S 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S Portland Ave &amp; Atlantic Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sharon St &amp; Olive St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Shevchenko Pl &amp; E 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smart Cities Conference&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Soissons Landing&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Spruce St &amp; Nassau St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;SSP Tech Workshop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stagg St &amp; Morgan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Norfolk St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;State St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sullivan Pl &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Suydam St &amp; Knickerbocker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Throop Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 30 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Verona Pl &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 12 St &amp; W 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 5 Ave -moved to 5947.04&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 14 St &amp; The High Line&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 17 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 39 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 40 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave -&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (1)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 56 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St  &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Park&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Waterbury St &amp; Stagg St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West Thames St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;White St &amp; Johnson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;White St &amp; Moore St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Wyckoff Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;WS Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff Av &amp; Jefferson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' direction='DESC' using='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='cols' value='Number of Rides' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{8957CF20-B38F-4CA5-B932-6A3375673E78}' />
    </worksheet>
    <worksheet name='10 Most Popular Ending Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' direction='DESC' using='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='cols' value='Number of Rides' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{8C754647-5962-4120-AB61-29C2D4B489E8}' />
    </worksheet>
    <worksheet name='10 Most Popular Starting Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 110 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 16 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 30 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 68 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Ave &amp; E 94 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;1 Pl &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 Ave &amp; W 28 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 Hudson Yards&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;10 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 27 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 Ave &amp; W 59 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;11 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;12 Ave &amp; W 40 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;12 St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;14 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;14 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;19 St &amp; 24 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave  &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; 36 St - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 105 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 122 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 55 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 96 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;2 Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 31 Dr&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 36 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 38 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; 43 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; Hoyt Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;21 St &amp; Queens Plaza North&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;23 Ave &amp; 27 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 Ave &amp; 26 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 Ave &amp; 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;24 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 Ave &amp; 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;27 St &amp; Hunter St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 Ave &amp; 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 36 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 38 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 40 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;28 St &amp; 41 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; Carroll St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 100 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 112 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 62 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 71 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; E 95 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 Ave &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;3 St &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;30 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 30 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; 34 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 Ave &amp; Steinway St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; 23 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Astoria Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Hoyt Ave N&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Newtown Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Northern Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;31 St &amp; Thomson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;32 St &amp; 30 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 13 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 Ave &amp; 38 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;34 St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 Ave &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 Ave &amp; 37 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 St &amp; 34 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;35 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;36 Ave &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;36 Ave &amp; 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;37 Ave &amp; 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;37 St &amp; 24 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;39 St &amp; 2 Ave - Citi Bike HQ at Industry City&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;4 Ave &amp; 2 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;4 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;40 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;40 Ave &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;43 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;44 Dr &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;44 Dr &amp; Jackson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;45 Rd &amp; 11 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;46 Ave &amp; 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;47 Ave &amp; 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;47 Ave &amp; Skillman Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;48 Ave &amp; 30 Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;48 Ave &amp; 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;49 Ave &amp; 21 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 103 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 73 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 88 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 Ave &amp; E 93 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; 51 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;5 St &amp; Market St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;58th St Depot&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 Ave &amp; W 34 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;6 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 Ave &amp; Central Park South&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 Ave &amp; Park Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;7 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;78 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 16 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 31 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 33 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8 Ave &amp; W 52 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;8D OPS 01&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 22 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 28 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 Ave &amp; W 45 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;9 St &amp; 44 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 118 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 123 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adam Clayton Powell Blvd &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adelphi St &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Adventures NYC&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Albany Ave &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Allen St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 119 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 125 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 66 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 73 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 79 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Amsterdam Ave &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Apache&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Astoria Park S &amp; Shore Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Atlantic Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Atlantic Ave &amp; Furman St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue C &amp; E 18 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Avenue D &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Baltic St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bank St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bank St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Banker St &amp; Meserole Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Barclay St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Barrow St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bayard St &amp; Baxter St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bayard St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bedford Ave &amp; S 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bergen St &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berkeley Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berkeley Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Berry St &amp; N 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bialystoker Pl &amp; Delancey St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bike in Movie Night | Prospect Park Bandshell&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bike The Branches - Central Branch&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Boerum St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bond St &amp; Schermerhorn St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bressler&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broad St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Battery Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Berry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; E 22 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Moylan Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Roebling St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 122 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 24 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 25 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 32 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 36 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 37 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 38 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 39 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 41 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 49 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 51 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 53 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 55 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 56 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 58 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; W 60 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Broadway &amp; Whipple St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Brooklyn Bridge Park - Pier 2&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bus Slip &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; McKibbin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; Powers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Bushwick Ave &amp; Stagg St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Butler St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Johnson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Red Cross Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza E &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cadman Plaza West &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cambridge Pl &amp; Gates Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Canal St &amp; Rutgers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Dean St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carlton Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carmine St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Columbia St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Carroll St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cathedral Pkwy &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Catherine St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cedar St &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; 48 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; 51 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Center Blvd &amp; Borden Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Ave &amp; Starr Street&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park North &amp; Adam Clayton Powell Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park S &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park W &amp; W 96 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 100 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 102 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 68 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 76 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Central Park West &amp; W 85 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Centre St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Centre St &amp; Worth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cherry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Christopher St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clark St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Classon Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clermont Ave &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clermont Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cleveland Pl &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St (Old)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cliff St &amp; Fulton St_1&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton Ave &amp; Flushing Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; 4 Place&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Centre St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Joralemon St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Tillary St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Clinton St &amp; Union St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Coffey St &amp; Conover St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia Heights &amp; Cranberry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Degraw St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Kane St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Lorraine St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; Rivington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbia St &amp; W 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 103 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Columbus Ave &amp; W 95 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Commerce St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Concord St &amp; Bridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Congress St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Convent Ave &amp; W 129 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cooper Square &amp; Astor Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cooper Square &amp; E 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Court St &amp; Nelson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Court St &amp; State St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 30 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 34 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; 35 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crescent St &amp; Ditmars Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Crown St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Cumberland St &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dean St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Degraw St &amp; Hoyt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Degraw St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Hudson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; S Portland Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Skillman St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;DeKalb Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Devoe St &amp; Morgan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Ditmars Blvd &amp; 19 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Av &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Ave &amp; Hooper St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division Ave &amp; Marcy Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Division St &amp; Bowery&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dock 72 Way &amp; Market St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Douglass St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Douglass St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; Lorimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; N 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Driggs Ave &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Duane St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Duffield St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Dwight St &amp; Van Dyke St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 10 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 10 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 102 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 102 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 103 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 106 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 109 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 11 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 110 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 114 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 115 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 115 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 116 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 118 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; 4 Av&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 12 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 123 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 128 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 14 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 15 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 16 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 16 St &amp; Irving Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 17 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 19 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 2 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; FDR Drive&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 20 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 23 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 24 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 25 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 25 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 27 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 3 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 30 St &amp; Park Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 31 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 32 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 33 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 35 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 37 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 39 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 39 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 4 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 40 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 41 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 41 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 43 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 43 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 44 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 45 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 47 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 48 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 48 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 5 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 5 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 51 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 51 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 52 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 53 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 55 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 56 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp;  1 Ave (NW Corner)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 1 Ave (NE Corner)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 58 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 59 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 6 St &amp; Avenue B&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 6 St &amp; Avenue D&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 60 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 61 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 65 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 66 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 67 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 68 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 68 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 7 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 71 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 71 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 72 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 72 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 74 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 75 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 76 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 76 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 77 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 77 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 78 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 80 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 81 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 82 St &amp; East End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 84 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 85 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 85 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 87 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 88 St &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 88 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 89 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 89 St &amp; York Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 9 St &amp; Avenue C&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 91 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 91 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 93 St &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 95 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 97 St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 97 St &amp; Madison Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 98 St &amp; Lexington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;E 98 St &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;East End Ave &amp; E 86 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eastern Pkwy &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eastern Pkwy &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Eckford St &amp; Engert Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Elizabeth St &amp; Hester St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Emerson Pl &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Expansion Tech Station&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Expansion Warehouse 333 Johnson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;FDR Drive &amp; E 35 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Flushing Ave &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Forsyth St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Forsyth St &amp; Canal St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; Empire Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin Ave &amp; St Marks Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin St &amp; Dupont St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Franklin St &amp; W Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 112 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 117 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frederick Douglass Blvd &amp; W 129 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Gold St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Maiden Ln&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Front St &amp; Washington St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frost St &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Frost St &amp; Meeker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Adams St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Clermont Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Grand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Irving Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Rockwell Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Utica Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; Waverly Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Fulton St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gansevoort St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Garfield Pl &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;George St &amp; Wilson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gold St &amp; Frankfort St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;GOW Tech Shop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Gowanus Tech Station&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Conselyea St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Herbert St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Graham Ave &amp; Withers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Army Plaza &amp; Central Park S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Army Plaza &amp; Plaza St West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand Ave &amp; Bergen St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Elizabeth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Greene St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Grand St &amp; Havemeyer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Great Jones St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Av &amp; Myrtle Av&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greene Ave &amp; Throop Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenpoint Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich Ave &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich Ave &amp; Charles St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; Hubert St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; North Moore St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; W Houston St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Greenwich St &amp; Warren St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Halsey St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hancock St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Handlebar @ Gowanus&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hanson Pl &amp; Ashland Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hanson Pl &amp; St Felix St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Harrison St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hart St &amp; Wyckoff Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Atlantic Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Bay St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Degraw St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Middagh St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; Poplar St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St (OLD)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Henry St &amp; W 9 St [old]&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hicks St &amp; Montague St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hope St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Howard St &amp; Centre St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hoyt St &amp; Warren St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hs Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Hudson St &amp; Reade St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Humboldt St &amp; Varet St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Huron St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; East River&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;India St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Industry City, Building 1 Basement&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Irving Ave &amp; DeKalb Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Irving Ave &amp; Jefferson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jackson Ave &amp; 46 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jackson St &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jay St &amp; Tech Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Jay St &amp; York St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;John St &amp; William St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Johnson St &amp; Gold St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;JSQ Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kane St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kent Ave &amp; N 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kent Ave &amp; S 11 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kingston Ave &amp; Herkimer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kiosk in a box Motivate&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Knickerbocker Ave &amp; George St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Knickerbocker Ave &amp; Thames St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kosciuszko St &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Kosciuszko St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; Fort Greene Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette Ave &amp; St James Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette St &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lafayette St &amp; Jersey St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;LaGuardia Pl &amp; W 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Laight St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lawrence St &amp; Willoughby St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lefferts Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 111 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 115 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 117 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lenox Ave &amp; W 130 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Bayard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Boerum St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Grand St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Maujer St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Leonard St &amp; Nassau Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Decatur St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Kosciuszko St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lewis Ave &amp; Madison St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 111 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 127 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 24 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 26 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 29 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 36 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lexington Ave &amp; E 63 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Liberty St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lincoln Pl &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lispenard St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Little West St &amp; 1 Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Lorimer St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;LPI Facility&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;MacDougal St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;MacDougal St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Macon St &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison Ave &amp; E 99 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Madison St &amp; Montgomery St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Maiden Ln &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Marcus Garvey Blvd &amp; Macon St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Marcy Ave &amp; Lafayette Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Market St &amp; Cherry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McGuinness Blvd &amp; Eagle St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McKibbin St &amp; Bogart St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;McKibbin St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mercer St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mercer St &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Meserole Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Metropolitan Ave &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Metropolitan Ave &amp; Meeker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Milton St &amp; Franklin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Monroe St &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montague St &amp; Clinton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montgomery St &amp; Franklin Ave OLD&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Montrose Ave &amp; Bushwick Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Morningside Ave &amp; W 123 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Morningside Dr &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mott St &amp; Prince St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Mt Morris Park W &amp; W 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Murray St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Murray St &amp; West St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; Lewis Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; Marcy Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Myrtle Ave &amp; St Edwards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 11 St &amp; Kent Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 11 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 12 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 15 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 6 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;N 8 St &amp; Driggs Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau Ave &amp; Newell St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau Ave &amp; Russell St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nassau St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Newton Rd &amp; 44 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Newtown Ave &amp; 23 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norfolk St &amp; Broome St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norman Ave &amp; Leonard St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Norman Ave &amp; Leonard St - 2&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;North Moore St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Nostrand Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS DEPOT - DELANCEY&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - GOW&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - PIT&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - RIS&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - SSP&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot - STY - Garage 4&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;NYCBS Depot BAL - DYR&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;old - E 13 St &amp; Avenue A&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Old Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Old Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Classon Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pacific St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; E 124 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Ave &amp; St Edwards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Franklin Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Park Pl &amp; Vanderbilt Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pearl St &amp; Anchorage Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pearl St &amp; Hanover Square&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Peck Slip &amp; Front St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Penn Station Valet&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Penn Station Valet - Valet Scan&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Perry St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square North&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pershing Square South&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Picnic Point&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pier 40 - Hudson River Park&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pierrepont St &amp; Monroe Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pike St &amp; E Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pike St &amp; Monroe St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pioneer St &amp; Richards St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pioneer St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pitt St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Plaza St West &amp; Flatbush Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pleasant Ave &amp; E 116 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pleasant Ave &amp; E 120 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Powers St &amp; Olive St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;President St &amp; Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Park - 5 Year Anniversary Celebration&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Park West &amp; 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prospect Pl &amp; Underhill Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Prototype Lab Motivate Headquarters&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Pulaski St &amp; Marcus Garvey Blvd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Putnam Ave &amp; Nostrand Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Putnam Ave &amp; Throop Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Queens Plaza North &amp; Crescent St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Railroad Ave &amp; Kay Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Reade St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Reed St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Richards St &amp; Delavan St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Richardson St &amp; N Henry St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Blvd &amp; W 67 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 104 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 72 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 78 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 82 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 89 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Riverside Dr &amp; W 91 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rivington St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rivington St &amp; Ridge St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Roebling St &amp; N 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Rogers Ave &amp; Sterling St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 3 St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 4 St &amp; Rodney St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 4 St &amp; Wythe Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 5 Pl &amp; S 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S 5 Pl &amp; S 5 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S Portland Ave &amp; Atlantic Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;S Portland Ave &amp; Hanson Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sands St &amp; Navy St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Schermerhorn St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Scholes St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sharon St &amp; Olive St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Shevchenko Pl &amp; E 7 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sigourney St &amp; Columbia St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smart Cities Conference&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smith St &amp; 3 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Smith St &amp; 9 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Soissons Landing&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South End Ave &amp; Liberty St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South St &amp; Gouverneur Ln&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;South St &amp; Whitehall St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Spruce St &amp; Nassau St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;SSP Tech Workshop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St James Pl &amp; Oliver St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St James Pl &amp; Pearl St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Johns Pl &amp; Washington Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Marks Pl &amp; 1 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Marks Pl &amp; 2 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St Nicholas Ave &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;St. Nicholas Ave &amp; W 126 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stagg St &amp; Morgan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stagg St &amp; Union Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Chrystie St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Mangin St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stanton St &amp; Norfolk St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;State St &amp; Smith St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Steinway St &amp; 23 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Steinway St &amp; 28 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling Pl &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling Pl &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sterling St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stockholm St &amp; Wilson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Stuyvesant Walk &amp; 1 Av Loop&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Suffolk St &amp; Stanton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sullivan Pl &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Sullivan St &amp; Washington Sq&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Suydam St &amp; Knickerbocker Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Thompson St &amp; Bleecker St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Throop Ave &amp; Myrtle Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Tompkins Ave &amp; Hopkins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Underhill Ave &amp; Lincoln Pl&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Underhill Ave &amp; Pacific St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; Jackson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; N 12 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union Ave &amp; Wallabout St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; 4 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; Bedford Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Union St &amp; Nevins St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;University Pl &amp; E 14 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;University Pl &amp; E 8 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Brunt St &amp; Van Dyke St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Brunt St &amp; Wolcott St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Van Dyke St &amp; Van Brunt St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 10 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 30 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 31 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 41 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 47 Rd&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vernon Blvd &amp; 50 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Verona Pl &amp; Fulton St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Vesey Pl &amp; River Terrace&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 100 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 100 St &amp; Manhattan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 104 St &amp; Amsterdam Ave - 1&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 106 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 106 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 107 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 11 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 110 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 113 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 116 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 116 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 12 St &amp; W 4 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 120 St &amp; Claremont Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 129 St &amp; Convent Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 5 Ave -moved to 5947.04&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 13 St &amp; Hudson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 14 St &amp; The High Line&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 15 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 16 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 16 St &amp; The High Line&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 17 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 17 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 18 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 18 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 20 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 21 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 22 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 22 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 24 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 25 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 26 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 26 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 27 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 27 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 31 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 33 St &amp; 7 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 34 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 35 St &amp; Dyer Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 36 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 37 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 38 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 39 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 4 St &amp; 7 Ave S&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 40 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 41 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 42 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 42 St &amp; Dyer Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 43 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 43 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 44 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave -&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (1)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 6 Ave (OLD)&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 45 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 46 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 47 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 49 St &amp; 8 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 50 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 51 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 11 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 5 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 52 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 53 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 54 St &amp; 9 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 55 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 56 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 56 St &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 59 St &amp; 10 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 63 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 64 St &amp; Thelonious Monk Circle&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 64 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 67 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 70 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 74 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 76 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 78 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 82 St &amp; Central Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 84 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 84 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St  &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 87 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 88 St &amp; West End Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 89 St &amp; Columbus Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 90 St &amp; Amsterdam Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 92 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W 95 St &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W Broadway &amp; Spring St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;W Broadway &amp; Spring Street&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Warren St &amp; Church St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Warren St &amp; Court St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Ave &amp; Greene Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Ave &amp; Park Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Park&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Pl &amp; 6 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington Pl &amp; Broadway&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Washington St &amp; Gansevoort St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Water - Whitehall Plaza&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Waterbury St &amp; Stagg St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Watts St &amp; Greenwich St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West Drive &amp; Prospect Park West&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West End Ave &amp; W 107 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West End Ave &amp; W 94 St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West St &amp; Chambers St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;West Thames St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;White St &amp; Johnson Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;White St &amp; Moore St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;William St &amp; Pine St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Hall St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Tompkins Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Walworth St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby Ave &amp; Wyckoff Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Willoughby St &amp; Fleet St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wolcott St &amp; Dwight St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;WS Don&apos;t Use&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff Av &amp; Jefferson St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff St &amp; 3 Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wyckoff St &amp; Bond St&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Wythe Ave &amp; Metropolitan Ave&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;Yankee Ferry Terminal&quot;' />
                  <groupfilter function='member' level='[none:start station name:nk]' member='&quot;York St &amp; Jay St&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' direction='DESC' using='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='cols' value='Number of Rides' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{B7EDD824-51F6-43EA-8367-0DA7831F1A7E}' />
    </worksheet>
    <worksheet name='Annual Monthly Ridership'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='None' name='[none:starttime:qk]' pivot='key' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]' included-values='in-range'>
            <min>#2017-04-01 00:00:00#</min>
            <max>#2019-07-31 23:59:57.487#</max>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='rows' value='Number of Rides' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</cols>
      </table>
      <simple-id uuid='{BE7CD990-9CA8-4A4F-9914-ED06DA134F87}' />
    </worksheet>
    <worksheet name='Average Trip Duration by Gender and Age'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column caption='AGE' datatype='integer' name='[Calculation_120823168165191680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2019 - [birth year]' />
            </column>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative'>
              <aliases>
                <alias key='1' value='Female' />
                <alias key='2' value='Male' />
              </aliases>
            </column>
            <column-instance column='[Calculation_120823168165191680]' derivation='None' name='[none:Calculation_120823168165191680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]' included-values='in-range'>
            <min>16</min>
            <max>83</max>
          </filter>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:tripduration:qk]' included-values='in-range'>
            <min>61</min>
            <max>15000</max>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</column>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[avg:tripduration:qk]' scope='rows' value='Avg. Tripduration (seconds)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[avg:tripduration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[avg:tripduration:qk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</cols>
      </table>
      <simple-id uuid='{EA8C05A1-1093-4430-81D3-0D198EE83A39}' />
    </worksheet>
    <worksheet name='Ending Location and Usage'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station id]' derivation='Sum' name='[sum:end station id:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[Exclusions (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start station latitude:qk]' />
                <groupfilter function='level-members' level='[none:start station longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.505850638767228' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.569109439849854' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.506364054011385' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.569463491439805' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[Exclusions (Start Station Latitude,Start Station Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station longitude:qk]' field-type='quantitative' max='-8226100.3085200153' min='-8246665.9590985794' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station latitude:qk]' field-type='quantitative' max='4983279.5525221117' min='4967611.6753826328' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#eddbdf</color>
                <color>#e9c6ce</color>
                <color>#e5b2be</color>
                <color>#e19eae</color>
                <color>#dd8b9e</color>
                <color>#d9788f</color>
                <color>#d56681</color>
                <color>#d15573</color>
                <color>#cd4465</color>
                <color>#ca3458</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <size column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <lod column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:end station id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station latitude:qk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{326F21A9-74F0-4886-8FFA-B19B9584A44B}' />
    </worksheet>
    <worksheet name='Increasing Monthly Ridership 2017-2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='None' name='[none:starttime:qk]' pivot='key' type='quantitative' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]' included-values='in-range'>
            <min>#2017-04-01 00:00:00#</min>
            <max>#2019-07-31 23:59:57.487#</max>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='rows' value='Number of Rides' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>([federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok] / [federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok])</cols>
      </table>
      <simple-id uuid='{5B179E00-C0DD-4C25-82E3-437237925F2A}' />
    </worksheet>
    <worksheet name='Least Popular Ending Stations'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]'>
            <groupfilter count='13' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:end station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' direction='DESC' using='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='cols' value='Number of Rides' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</cols>
      </table>
      <simple-id uuid='{0FEC71AB-62EF-484F-9171-877D08DC6EE0}' />
    </worksheet>
    <worksheet name='Monthly Ridership (%)'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' value='Month:'>
              <formatted-text>
                <run>Month:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' />
              <wedge-size column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{27E96075-77B6-4988-AC15-726AF955653D}' />
    </worksheet>
    <worksheet name='Ridership by Age and Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column caption='AGE' datatype='integer' name='[Calculation_120823168165191680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2019 - [birth year]' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative'>
              <aliases>
                <alias key='1' value='Female' />
                <alias key='2' value='Male' />
              </aliases>
            </column>
            <column-instance column='[Calculation_120823168165191680]' derivation='None' name='[none:Calculation_120823168165191680:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]' included-values='in-range'>
            <min>16</min>
            <max>83</max>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='rows' value='Number of Rides' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' value='Female                         Male'>
              <formatted-text>
                <run>Female                         Male</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</cols>
      </table>
      <simple-id uuid='{F03A41B3-FA71-4BA5-8C1A-95BE175C7824}' />
    </worksheet>
    <worksheet name='Ridership by Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative'>
              <aliases>
                <alias key='1' value='Female' />
                <alias key='2' value='Male' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' included-values='all' />
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' palette='gold_purple_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' />
              <wedge-size column='[federated.0pac56g12cis1a18yge3n121zsq4].[cnt:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{076FC87A-0762-4D41-9D02-2BF8234FE460}' />
    </worksheet>
    <worksheet name='Ridership by Quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='None' name='[none:starttime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]' included-values='in-range'>
            <min>#2017-04-01 00:00:00#</min>
            <max>#2019-07-31 23:59:57.487#</max>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='rows' value='Number of Rides' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>([federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok] / [federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok])</cols>
      </table>
      <simple-id uuid='{81034552-8ED9-41BD-892A-3600E8AE859A}' />
    </worksheet>
    <worksheet name='Ridership by Quarter (%)'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[starttime]' derivation='Quarter' name='[qr:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]' />
              <wedge-size column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[pcto:sum:Number of Records:qk]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{AC06069C-98C7-4F05-BDFE-1911D7951F3B}' />
    </worksheet>
    <worksheet name='Ridership by User Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative'>
              <aliases>
                <alias key='1' value='Female' />
                <alias key='2' value='Male' />
              </aliases>
            </column>
            <column-instance column='[gender]' derivation='None' name='[none:gender:ok]' pivot='key' type='ordinal' />
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>([federated.0pac56g12cis1a18yge3n121zsq4].[none:usertype:nk] / [federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok])</cols>
      </table>
      <simple-id uuid='{87FE6A65-09DF-42F8-9830-58FD34E49800}' />
    </worksheet>
    <worksheet name='Ridership for 2017 - 2019'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[starttime]' derivation='Month' name='[mn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Year' name='[yr:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]'>
            <groupfilter from='1' function='range' level='[mn:starttime:ok]' to='12' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:starttime:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[mn:starttime:ok]' member='8' />
                <groupfilter function='member' level='[mn:starttime:ok]' member='9' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' scope='rows' value='Number of Rides' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' value='47' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' value='Year:'>
              <formatted-text>
                <run>Year:</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' />
              <text column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</rows>
        <cols>([federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok] / [federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok])</cols>
      </table>
      <simple-id uuid='{7C675262-9CDE-4E06-9578-10CB4EAD3183}' />
    </worksheet>
    <worksheet name='Starting Locations and Usage'>
      <table>
        <view>
          <datasources>
            <datasource caption='201608-citibike-tripdata' name='federated.0pac56g12cis1a18yge3n121zsq4' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pac56g12cis1a18yge3n121zsq4'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station id]' derivation='Sum' name='[sum:end station id:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pac56g12cis1a18yge3n121zsq4].[Exclusions (Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:start station latitude:qk]' />
                <groupfilter function='level-members' level='[none:start station longitude:qk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.505850638767228' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.569109439849854' />
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='45.506364054011385' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.569463491439805' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pac56g12cis1a18yge3n121zsq4].[Exclusions (Start Station Latitude,Start Station Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station longitude:qk]' field-type='quantitative' max='-8224290.3029421056' min='-8246300.306684956' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station latitude:qk]' field-type='quantitative' max='4982849.9477546019' min='4966729.1073384797' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2cfe6</color>
                <color>#d3afdb</color>
                <color>#c591d0</color>
                <color>#b776c5</color>
                <color>#aa5dba</color>
                <color>#9d45af</color>
                <color>#9031a4</color>
                <color>#841e99</color>
                <color>#780e8e</color>
                <color>#6d0083</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='admin-2-boundaries-bg' value='true' />
            <format attr='enabled' id='admin-2-boundaries' value='true' />
            <format attr='enabled' id='admin-2-label' value='true' />
            <format attr='enabled' id='Zip Code Boundaries' value='true' />
            <format attr='enabled' id='Zip Code Labels' value='true' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <size column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' />
              <lod column='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:end station id:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station latitude:qk]</rows>
        <cols>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{A1790D9B-3730-4053-B526-8C07C87E7CDC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Annual Ridership'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='10' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='7' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
                <zone h='32250' id='3' name='Ridership by Quarter (%)' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='65750' id='8' name='Ridership for 2017 - 2019' w='82400' x='800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32250' id='12' name='Monthly Ridership (%)' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='9' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone fixed-size='286' h='36750' id='13' is-fixed='true' name='Monthly Ridership (%)' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='99' h='13375' id='11' is-fixed='true' name='Ridership for 2017 - 2019' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' type='color' w='16000' x='83200' y='37750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='21' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='250' h='32250' id='3' is-fixed='true' name='Ridership by Quarter (%)' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='250' h='32250' id='12' is-fixed='true' name='Monthly Ridership (%)' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='286' h='36750' id='13' name='Monthly Ridership (%)' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='65750' id='8' is-fixed='true' name='Ridership for 2017 - 2019' w='82400' x='800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='13375' id='11' name='Ridership for 2017 - 2019' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' type='color' w='16000' x='83200' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A80D8DC0-7B4F-4EEB-9388-67ADB64E033F}' />
    </dashboard>
    <dashboard name='Changes in CitiBiker Ridership Over Time' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CitiBike ridership has steadily increased over time with peak usage during the summer.</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Total Monthly Ridership 2017 - 2019' captured-sheet='Annual Monthly Ridership' id='1' />
                  <story-point caption='Change in Monthly Ridership Between 2017 - 2019' captured-sheet='Increasing Monthly Ridership 2017-2019' id='2' />
                  <story-point caption='Ridership by Quarter 2017 - 2019' captured-sheet='Ridership by Quarter' id='3' />
                  <story-point caption='Change in Ridership 2017 - 2019' captured-sheet='Annual Ridership' id='4' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E11CC46C-5F59-4FF9-A707-25C52A21CF5B}' />
    </dashboard>
    <dashboard name='Composition of CitiBike Ridership' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run>CitiBike ridership is predominately female, between the ages of 25-40, consists of regular subscribers, and is concentrated in mid-Manhattan. </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='6846' id='3' type='title' w='98426' x='787' y='830' />
            <zone fixed-size='105' h='10892' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='7676' />
            <zone h='80602' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='18568'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='CitiBike Stations Where Rides Started' captured-sheet='Starting Locations and Usage' id='1'>
                    <capturedDeltas>
                      <worksheet name='Starting Locations and Usage'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station latitude:qk]' field-type='quantitative' max='4984788.8738232134' min='4962821.7578949761' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station longitude:qk]' field-type='quantitative' max='-8225292.5785698527' min='-8247976.3125205478' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='CitiBike Stations Where Rides Ended' captured-sheet='Ending Location and Usage' id='6' />
                  <story-point caption='Top Most and Least Popular Stations by Use' captured-sheet='Station Summary' id='2' />
                  <story-point caption='Ridership by Age and Gender' captured-sheet='Ridership by Age and Gender' id='3' />
                  <story-point caption='Ride Duration by Age &amp; Gender, and Ridership Breakdown' captured-sheet='Ridership Data' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{56F6781C-8424-4819-B2B7-5735C38CD082}' />
    </dashboard>
    <dashboard name='Ridership Data'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Ridership by User Type' w='40900' x='42300' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Ridership by Gender' w='41500' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='Average Trip Duration by Gender and Age' w='41500' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8250' id='8' name='Ridership by User Type' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Ridership by Gender' w='41500' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Ridership by User Type' w='40900' x='42300' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8250' id='8' name='Ridership by User Type' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='Average Trip Duration by Gender and Age' w='41500' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C5F40071-8322-44AE-89A8-F46E8B9C27C6}' />
    </dashboard>
    <dashboard name='Station Summary'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='10 Most Popular Starting Stations' w='41200' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='10 Least Popular Starting Stations' w='41200' x='42000' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='10 Most Popular Ending Stations' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='12' name='Least Popular Ending Stations' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='28250' id='8' name='10 Most Popular Starting Stations' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='28250' id='11' name='10 Most Popular Ending Stations' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' type='color' w='16000' x='83200' y='29250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='10 Most Popular Starting Stations' w='41200' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28250' id='8' name='10 Most Popular Starting Stations' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='10 Least Popular Starting Stations' w='41200' x='42000' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='10 Most Popular Ending Stations' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='28250' id='11' name='10 Most Popular Ending Stations' pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' type='color' w='16000' x='83200' y='29250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='12' is-fixed='true' name='Least Popular Ending Stations' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12C96DA8-0A44-4BF6-8EE9-DEBEC2563ABE}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Composition of CitiBike Ridership'>
      <viewpoints />
      <active id='3' />
      <simple-id uuid='{F44751C4-AB3D-4309-A963-616C7C28D3A0}' />
    </window>
    <window class='dashboard' name='Changes in CitiBiker Ridership Over Time'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{94B16CD2-196A-48DF-BF2F-38410A2E4AC8}' />
    </window>
    <window class='worksheet' maximized='true' name='Starting Locations and Usage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{D2F994C5-17C3-4D20-8567-AD6404AB3BF9}' />
    </window>
    <window class='worksheet' name='10 Most Popular Starting Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79BC9E0D-E5A5-4BAF-AB6B-A3B590ED863F}' />
    </window>
    <window class='worksheet' name='10 Least Popular Starting Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{66B5B23A-88A0-4195-A268-8529C0C5058E}' />
    </window>
    <window class='worksheet' name='Ending Location and Usage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='color' />
            <card pane-specification-id='5' param='[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{289DFDE8-929A-4CFD-9BEC-395673D63D2C}' />
    </window>
    <window class='worksheet' name='10 Most Popular Ending Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{231E6CD3-7A07-49BD-B641-80AED53D62DD}' />
    </window>
    <window class='worksheet' name='Least Popular Ending Stations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2298FED6-E0D6-4D1F-BEB8-9B856060A546}' />
    </window>
    <window class='worksheet' name='Ridership by Age and Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E31F13C4-4354-41BD-9B83-4406F990AE9A}' />
    </window>
    <window class='worksheet' name='Ridership by User Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:User Type:nk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:usertype:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9280923-1755-401D-9BFB-C1EDD1CA8297}' />
    </window>
    <window class='worksheet' name='Average Trip Duration by Gender and Age'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:Calculation_120823168165191680:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:tripduration:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:Start Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{31126D09-420C-4150-B3EF-27B49CF375BA}' />
    </window>
    <window class='worksheet' name='Ridership by Gender'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{99B7DC04-857E-4F8A-868E-0C4D8B499BBC}' />
    </window>
    <window class='dashboard' name='Station Summary'>
      <viewpoints>
        <viewpoint name='10 Least Popular Starting Stations' />
        <viewpoint name='10 Most Popular Ending Stations'>
          <highlight>
            <color-one-way>
              <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:end station name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='10 Most Popular Starting Stations'>
          <highlight>
            <color-one-way>
              <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:start station name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Least Popular Ending Stations' />
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{966DA268-C5E1-439E-B550-3B356A83995F}' />
    </window>
    <window class='dashboard' name='Ridership Data'>
      <viewpoints>
        <viewpoint name='Average Trip Duration by Gender and Age'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ridership by Gender' />
        <viewpoint name='Ridership by User Type'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{989A6DA9-8A11-45D2-A078-586869A5F318}' />
    </window>
    <window class='worksheet' name='Annual Monthly Ridership'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:Start Time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9796A3DA-8296-420A-B538-B4CC82850F5F}' />
    </window>
    <window class='worksheet' name='Increasing Monthly Ridership 2017-2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:Start Time:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34219271-024A-4BCE-BDD5-2A31E9B77776}' />
    </window>
    <window class='worksheet' name='Ridership by Quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:Start Time:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B029B7A4-4C01-43E2-85C7-463788D3F755}' />
    </window>
    <window class='worksheet' name='Ridership for 2017 - 2019'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:gender:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[none:starttime:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:Start Time:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A3D1BBA8-C03C-41CB-9679-DEA21EC77700}' />
    </window>
    <window class='worksheet' name='Ridership by Quarter (%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[qr:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D13FF6D6-CB0A-4BEB-9331-5070CCD2A36A}' />
    </window>
    <window class='worksheet' name='Monthly Ridership (%)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[mn:starttime:ok]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[sum:Number of Records:qk]</field>
            <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{21D97217-1801-47FE-B777-822024D9694A}' />
    </window>
    <window class='dashboard' name='Annual Ridership'>
      <viewpoints>
        <viewpoint name='Monthly Ridership (%)' />
        <viewpoint name='Ridership by Quarter (%)' />
        <viewpoint name='Ridership for 2017 - 2019'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0pac56g12cis1a18yge3n121zsq4].[yr:starttime:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9AB2952E-8BA2-45B3-97DB-E48A325F0CD5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='10 Least Popular Starting Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='10 Most Popular Ending Stations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='10 Most Popular Starting Stations' width='192'>
      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
      nEC/qgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Annual Monthly Ridership' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Annual Ridership' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Average Trip Duration by Gender and Age' width='192'>
      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
      aG9v5+jRo5s6uWIARWundR5Ha8O/NDQ0cP36dV577bVNjwIrKPyisOFj0mKxkM/nef/999Hr
      H522pqDwPLDhGyCfz9PU1LTpur+Cwi8S674BUqkU3/nOdxgYGNg1yyIqKDwN1jWA2WzmG9/4
      BrW1tUxOTq7/zXs9Cvf/W/1o+3b2U1B4FnzqOMDGyIyPDCEYrKjyKSKpPDWVDvz+AA3tfVQ5
      TEovkKK14zqPo7XFs0iseHzoKoo4K6zUV5qY8wQ4evQgniUfrgr9ts8JflwemTr5BGxXTIrW
      zug8jtYWDSBisZjJ5HJkNBKhcBG7zcKdwdtUNXQ9WEtIeQMoWjup8zhaWzyLwJFTJ1ld2WN1
      G5rV5StKqFTbE7iCwrNgy3erIIj3N2h/8MRXbn6FXzS2f1t3BYVfIBQDKOxpFAMo7GkUAyjs
      aRQDKOxpFAMo7GkUAyjsaRQDKOxpFAMo7GkUAyjsaRQDKOxpFAMo7GkUAyjsaRQDKOxpFAMo
      7GmewAAyqWSKfDZNKBxDKhfx+/xIyrx4hV8gtjyDZWV+lvH5EG7b6rajiwsSdpuF2XmZ9pbN
      L6euoLATbMkAcrnA0OQ0hbyM09mMy6Jl1huip7b+qW2U/dixKZPif+G1nmVMW1wWZZVlzwrl
      QpJgLEdzvZuZ+UU6e/uxmbTKsiiK1o7rPI7WE52lrr4GqKHx3r+dlTVPIqeg8MxReoEU9jSK
      ART2NIoBFPY0igEU9jSKART2NIoBFPY0igEU9jSKART2NIoBFPY0igEU9jSKART2NIoBFPY0
      igEU9jSKART2NIoBFPY0WzbAxzfJvj/zazMzwBQUdgNbnhAzPzWON5TGadUQTxeodNkIhyPU
      tuyj1m3dzhgVFJ4aWzZAhdVCKFtGpdbTWF3BrMf/YKPsssOkzAlWtHZc53G0tmgAmTuDQ7ib
      2sjn4gQjRdwuG4ODt6lr3qdslK1o7Qqdx9Ha8kbZL33+CwD32gAyKpVIuVx+cPMrKPwi8MQ2
      EwQBlWr1Ka/c/Aq/aCjdoAp7GsUACnsaxQAKexrFAAp7GsUACnsaxQAKexrFAAp7GsUACnsa
      xQAKexrFAAp7GsUACnsaxQAKe5ptNUC5XNpOOQWFp872JF0DC9OjBCNJXHXtNNc5t0tWQeGp
      sm1vgGxBYv/BA5Szye2SVFB46mybARw2C4ODg1ic7u2SVFB46mxbFaiytgl3TeO2zMVVUHhW
      PNE+wRtRLpc3PalZkqRtmccry/K2mXC7YlK0dkbncbSeigG2wnbNJ76/EsV2FOB2znFWtJ69
      zuNo7RoDKCjsBDs+EJaKR0hm80RDfkZGJiht0Y6yVGZybJhwPMWKZx5vILzlmArZJEPDw2Tz
      eSbGRvCH4lvWSscj3B0aIlcsMT05Rjyd27KW37PI+NTsanx3h0llC1vWKhfzhMIREpEAU/NL
      W9YBkEoFgqHwk/+GcpnxkWHS2RzjYyOk81sfVwp4lxgdnyKTijF0d4RccX2tnTWALBNYXiYS
      jbO4sEhllZutvvjkcgF3TR3zEyMEYiXCfu+WwyqWodpuYmpkglRBxmY1bVlLZzRjN6gZuXMX
      0eBkcXZmy1oVTicJn4/FuTn0DhcG3VaXdZKZnpwkFIkxu7iCsZwikt7izSbLzExOEgxHWVxY
      eqLfsJyPk8ioiAeWsbnrmJ2a3KISLHt8VFVV4pufx+xyo92gGrSzBhAE3JWVCEBrRyeBuXFC
      ma39EDISo2NT9PZ1IQgqhCe4slwqiidWYt/+Lppq3dwdGtmyloBMtighl3OoRDWCuPUap1Qq
      IQgSlrpm9LkoU4v+LekUcylWQlECK16QBUS1gLTFmnCpmGXZHyLoW6Gprf2JfkNBZcJlE5hd
      8iOKKgRh62XV1tXB9MgQFU1tEF1mPrD+W3zbukG3gixLBMJhspIasaimpLdhN2zt+VHO59Hr
      dYQSRSzaHJLOseW4CkUJtZwjFkuw4vXR0Ni4Za1EPEqmUKS1q4+VxRncda1b1gqFgmisNjTF
      LCupIm2dW7tGjcHC+XNnScTjZFNxgskcPSbNlrTUWiPnXzpPIh4nFQ8/0W8oS2WS6QIHDu5n
      fnaKuuauLekARENBTE43ciZBrKii22Fe9zilEaywp9nxRrCCwk6iGEBhT6MYQGHHuV8L//hm
      K88KxQAKO0opl+RP/s3/QSSd43vf/Q5X7wzz/b/8c37ys3cplJ6+GRQDKOwoK7NjGAxWhu7c
      QudqQqOSKZSKiDotovj0EysVAyjsKIu+BK++/gqZdAE5tkQiJ2MyG5HyBSTp6XdQKt2gCruG
      7dze6nHZ0YEwBYWPsxNzSf5/nTj8eArfUqkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Changes in CitiBiker Ridership Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Composition of CitiBike Ridership' width='192'>
      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
      qiYCIKiaCICgaiIAgqqJAAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYC
      IKiaCICgaiIAgqqJAAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKia
      CICgaiIAgqqJAAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICg
      aiIAgqqJAAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIA
      gqqJAAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJ
      AAiqJgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiq
      JgIgqJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIg
      qJoIgKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIgqJoI
      gKBqIgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIgqJoIgKBq
      IgCCqokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIgqJoIgKBqIgCC
      qokACKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgaiIAgqqJAAiqJgIgqJoIgKBqIgCCqokA
      CKomAiComgiAoGoiAIKqiQAIqiYCIKiaCICgav8f/nF7YLvlTI8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Ending Location and Usage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Increasing Monthly Ridership 2017-2019' width='192'>
      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
      3gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Least Popular Ending Stations' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='164' name='Monthly Ridership (%)' width='164'>
      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
      aC0VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ridership Data' width='192'>
      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
      IGmjAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ridership by Age and Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='164' name='Ridership by Gender' width='164'>
      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
      9AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ridership by Quarter' width='192'>
      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
      JvOPd3D+P888R/zq9LDrAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='164' name='Ridership by Quarter (%)' width='164'>
      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
      +YjhUQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ridership by User Type' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Ridership for 2017 - 2019' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Starting Locations and Usage' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Station Summary' width='192'>
      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
      gg==
    </thumbnail>
  </thumbnails>
</workbook>
